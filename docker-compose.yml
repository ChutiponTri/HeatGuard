version: "3.8"

services:
  web:
    build: .
    container_name: web
    command: >
      sh -c "python manage.py migrate &&
            gunicorn heatstroke.asgi:application -w 2 -k uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 &
            python -u manage.py mqtt"     
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # mqtt:
  #   build: .
  #   restart: unless-stopped
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URL: ${DATABASE_URL}

  adminer: 
    image: adminer
    container_name: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
      
volumes:
  pg_data:
  redis_data:


